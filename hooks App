import React, { useState, useEffect } from "react";
import Form from "../components/Form/Form";
import Contacts from "../components/Contacts/Contacts";
import Filter from "../components/Filter/Filter";
import { v4 as uuidv4 } from "uuid";
import css from "../components/Form/Form.module.css";

const useLocalStorage = () => {
  const [state,setState] = useState(() => {
    return JSON.parse(window.localStorage.getItem('contacts') ?? '');
});

useEffect(() =>{
  window.localStorage.setItem('contacts',JSON.stringify(state));
  }, [state]);
  return [state, setState];
}


export default function  App() {

  const [contacts, setContacts] = useLocalStorage('contacts', '');
const [filter, setFilter] = useState('');


  // componentDidMount() {
  //   const contacts = localStorage.getItem("contacts");
  //   const parsedContacts = JSON.parse(contacts);
  //   if (parsedContacts) {
  //     this.setState({ contacts: parsedContacts });
  //   }
  // }

  // componentDidUpdate(prevState) {
  //   if (this.state.contacts !== prevState.contacts) {
  //     localStorage.setItem("contacts", JSON.stringify(this.state.contacts));
  //   }
  // }

  const handleDeleteContacts = (evt) => {
    setContacts({
      contacts: contacts.filter(
        (contact) => contact.id !== evt.target.id
      ),
    });
  };

  const formSubmitHandler = (name, number) => {
    // const { contacts } = this.state;
    if (
      contacts.some(
        (contact) => contact.name.toLowerCase() === name.toLowerCase()
      )
    ) {
      alert(`${name} is already exists in contact list`);
      return;
    }
    setContacts.contacts.push({ name: name, id: uuidv4(), number: number });
    setContacts({ contacts: contacts });
  };

  const changeFilter = (evt) => {
    setFilter({ filter: evt.currentTarget.value });
  };

  const filterByName = () => {
    const normalizedFilter = filter.toLowerCase();
    const visibleContacts = contacts.filter((contact) =>
      contact.name.toLowerCase().includes(normalizedFilter)
    );

    return (
      <>
        <div className={css.postcard}>
          <h1>Phonebook</h1>
          <Form contacts={contacts} onSubmit={formSubmitHandler} />
          <div className={css.formRow}>
            <Filter value={filter} onChange={changeFilter} />
          </div>
          <h2>Contacts</h2>
          <Contacts
            filter={filter}
            onChange={filterByName}
            onClick={handleDeleteContacts}
            contacts={contacts}
            contacts={visibleContacts}
          />
        </div>
      </>
    );
    }